前情回顾

1.  文件
    分类 ：  文本    二进制

    字节串 ： 一些数据的二进制存储
            encode()  字符串-》字节串
            decode()  字节串-》字符串

2. 文件读写

   open()    r  w  a  +  b

   read() write()

   close()

3. 细节原理

   缓冲区 ：  减少和硬盘的交互次数 flush()

   文件偏移： seek()   tell()


练习1： 编写一个程序删除 /home/tarena/图片
文件夹中所有 大小不到 10kb的 普通文件


正则表达式训练：
1. 在一串英文文字中匹配出所有大写字母开头单词
   How are you Jame.

In [35]: re.findall('[A-Z][a-z]*',"How are you Ja
    ...: me.")
Out[35]: ['How', 'Jame']

2. 在一串文字中匹配出所有数字
   小明: 18  今年 2020
In [38]: re.findall('[0-9]+',"小明: 18  今年 2020
    ...: ")
Out[38]: ['18', '2020']

3. 匹配整数 （正数负数）
   温度： -25度   距离 38米
In [44]: re.findall('-?[0-9]+',"温度： -25度   距
    ...: 离 38米")
Out[44]: ['-25', '38']

4. 匹配国内的手机号码
In [49]: re.findall('1[345789][0-9]{9}',"18812345
    ...: 678")
Out[49]: ['18812345678']

5. 匹配QQ号码
In [53]: re.findall('[1-9][0-9]{5,10}',"125929699
    ...: 4")
Out[53]: ['1259296994']

6. 匹配大写字母开头单词
   Hello  hi   NBA  iPython  I

In [78]: re.findall(r'\b[A-Z]+[a-z]*\b',"Hello  h
    ...: i   NBA  iPython  I")
Out[78]: ['Hello', 'NBA', 'I']


7. 匹配数字   78 -8 12.4 -4.67
In [80]: re.findall(r'-?\d+\.?\d*',"78 -8 12.4 -4
    ...: .67")
Out[80]: ['78', '-8', '12.4', '-4.67']

8. 匹配日薪  ：   日薪：$150
In [85]: re.findall(r'\$\d+',"日薪:$150")
Out[85]: ['$150']


9. 匹配一些书的名称
《生活 n 次方》《东北往事——1919》《abc 少儿》《火星 %……&×》

In [97]: re.findall(r'《.+?》',"《生活 n 次方》《
    ...: 东北往事——1919》《abc 少儿》《火星 %……&×
    ...: 》")
Out[97]: ['《生活 n 次方》', '《东北往事——1919》', '《abc 少儿》', '《火星 %……&×》']


10. 匹配IP地址   192.168.114.15    0-255
In [105]: re.search(r'(\d{1,3}\.){3}\d{1,3}',"192
     ...: .168.5.42").group()
Out[105]: '192.168.5.42'

11. 匹配身份证号

In [109]: re.search(r'\d{17}(\d|x)',"110120199902
     ...: 02105x").group()
Out[109]: '11012019990202105x'

大招： 遇到正则使用先查后写
https://tool.oschina.net/regex/

作业： 1. 元字符 熟练一遍，课上练习看一看

练习： 使用log.txt文本完成
编写一个程序，输入一个接口名称，得到该接口运行信息中的
address is 地址值

提示: 每段之间有空行，每段是一个接口运行信息的描述
      每段的第一个单词是接口名称


思路: 先确定段落，再匹配目标 地址值





