前情回顾

1. ftp文件服务

   * 请求应答的模式

2. IO模型

   IO密集型  cpu密集型

3. 阻塞IO和非阻塞IO

非阻塞： 利用原本阻塞时间处理与阻塞事件无关的事情

        setblocking()  settimeout()

4. IO 多路复用

   select

   poll

   epoll


cookie:
文件描述符 ： 系统給每一个IO对象分配一个整数用于系统调用
            所有文件描述符不重复


练习： 将day16中的select_server.py改写为poll方法实现
      客户端最后直接发消息，不必再转为关注写操作

提示： 循环遍历就绪IO进行处理   fileno-->找对象
      找对象的字典随时维护

检测 ： tcp_client.py 检测


三种IO多路复用方法对比

select  支持操作系统多      最多1024个IO      效率一般

poll  只支持Liux，Unix     没有监控数量限制    效率一般

epoll  支持Linux          没有监控数量限制    效率高


练习2： 基于http_test完成
将网页 zhihu.html 文件以响应体发送给浏览器


web 服务程序实现


主要功能
     接收客户端（浏览器）请求
     解析客户端发送的请求
     根据请求组织数据内容
     将数据内容形成http响应格式返回给浏览器

类封装设计
     socket   实例化对象 --》 按照步骤调用方法

     Process  实例化对象 --》 启动进程

     * 如果类的功能比较多样性，内部尽量模块化，让用户
     通过调用不同的方法自由选择实现

     * 如果类的功能比较单一，尽可能为用户实现更多功能不让
     用户麻烦

     * 如果不能替用户决定的内容，让用户合理传参

     * 先站在使用者的角度想让用户怎么用





作业 ： 1. http协议格式
       2. 完成webserver









